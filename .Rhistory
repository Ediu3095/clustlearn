getwd()
?kmeans
devtools::load_all(".")
devtools::load_all(".")
kmeans(clustlearn::db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
kmeans(clustlearn::db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(clustlearn::db5[1:10, ], 3, details = TRUE)
gaussian_mixture(clustlearn::db5[1:10, ], 3, details = TRUE, max_iterations = 0)
gaussian_mixture(clustlearn::db5[1:10, ], 3, details = TRUE, max_iterations = 1)
gaussian_mixture(clustlearn::db5[1:10, ], 1, details = TRUE)
gaussian_mixture(clustlearn::db5[1:10, ], 2, details = TRUE)
devtools::load_all(".")
gaussian_mixture(clustlearn::db5[1:10, ], 2, details = TRUE)
gaussian_mixture(clustlearn::db5[1:10, ], 3, details = TRUE)
gaussian_mixture(clustlearn::db5, 3, details = TRUE)
gaussian_mixture(clustlearn::db5[10, ], 3, details = TRUE)
gaussian_mixture(clustlearn::db5[1:10, ], 3, details = TRUE)
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[10:20, ], 3, details = TRUE)
gaussian_mixture(db5[10:20, ], 3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
gaussian_mixture(db5[10:20, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[10:20, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[10:20, ], 3, details = TRUE)
gaussian_mixture(db5[1:20, ], 3, details = TRUE)
praise()
praise
devtools::load_all(".")
gaussian_mixture(db5[1:20, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
cl <- gaussian_mixture(db5[1:10, ], 3)
plot(db5[1:10, ], col = cl$cluster)
?gaussian_mixture
test <- function(db, k) {
print(cl <- clustlearn::gaussian_mixture(db, k, 100))
x <- seq(min(db[, 1]), max(db[, 1]), length.out = 100)
y <- seq(min(db[, 2]), max(db[, 2]), length.out = 100)
plot(db, col = cl$cluster, asp = 1, pch = 20)
for (i in seq_len(k)) {
m <- cl$mu[i, ]
s <- cl$sigma[i, , ]
f <- function(x, y) cl$lambda[i] * clustlearn:::dmnorm(cbind(x, y), m, s)
z <- outer(x, y, f)
contour(x, y, z, col = i, add = TRUE)
}
}
test(clustlearn::db1, 2)
test(clustlearn::db3, 2)
test(clustlearn::db3, 3)
test(clustlearn::db4, 3)
test(clustlearn::db5, 3)
test(clustlearn::db6, 3)
devtools::load_all(".")
test(clustlearn::db4, 3)
gaussian_mixture(db5[1:10, ], 3, details = TRUE)
?cov
gaussian_mixture(cbind(db5, db6), 3)
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:10, ], 3, details = TRUE)
devtools::load_all(".")
test(clustlearn::db5[1:10, ], 3)
test(clustlearn::db5[1:10, ], 3)
test(clustlearn::db5[1:11, ], 3)
test(clustlearn::db5[1:20, ], 3)
devtools::load_all(".")
devtools::load_all(".")
test(clustlearn::db5[1:20, ], 3)
agglomerative_clustering(clustlearn::db5[1:20, ], 3, details = TRUE)
gaussian_mixture(db5[1:20, ], 3, details = TRUE)
devtools::load_all(".")
cl <- gaussian_mixture(db5[1:20, ], 3, details = TRUE)
devtools::load_all(".")
kmeans(db5[1:20, ], 3, details = T)
devtools::load_all(".")
kmeans(db5[1:20, ], 3, details = T)
devtools::load_all(".")
kmeans(db5[1:20, ], 3, details = T)
devtools::load_all(".")
kmeans(db5[1:20, ], 3, details = T)
cat(1:3)
cat(1:3 / .3)
cat(round(1:3 / .3, 3))
devtools::load_all(".")
dbscan(db5[1:20, ], .3)
dbscan(db5[1:20, ], .3)
cl <- dbscan(db5[1:20, ], .3)
plot(db5[1:20, ], col = cl$cluster)
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE)
cl <- dbscan(rev(db5[1:20, ]), .3, details = TRUE)
devtools::load_all(".")
cl <- dbscan(rev(db5[1:20, ]), .3, details = TRUE)
devtools::load_all(".")
devtools::load_all(".")
cl <- dbscan(db4[1:20, ], .3, details = TRUE, waiting = FALSE)
plot (db4[1:20, ], col = cl$cluster)
plot (db4[1:20, ], col = cl$cluster + 1)
plot (db4[1:20, ], col = cl$cluster + 1, asp = 1)
plot (db4[1:20, ], col = cl$cluster + 1, asp = 1, pch = 20)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .3, details = TRUE, waiting = FALSE)
?dbscan
cl <- dbscan(db1[1:20, ], .4, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .5, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .6, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .7, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .3, 2, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .4, 2, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .4, 3, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .6, 3, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], 1, 3, details = TRUE, waiting = FALSE)
cl <- dbscan(db1[1:20, ], .8, 3, details = TRUE, waiting = FALSE)
plot(db1[1:20, ], col = cl$cluster, asp = 1, pch = 20)
plot(db2[1:20, ], col = cl$cluster, asp = 1, pch = 20)
plot(db2[1:40, ], col = cl$cluster, asp = 1, pch = 20)
plot(db2[1:50, ], col = cl$cluster, asp = 1, pch = 20)
plot(db2[1:100, ], col = cl$cluster, asp = 1, pch = 20)
cl <- dbscan(db1, .3, details = TRUE, waiting = FALSE)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
plot(db5[1:20, ], col = cl$cluster, aps = 1, pch = 20)
plot(db5[1:20, ], col = cl$cluster + 1, asp = 1, pch = 20)
plot(db5[1:20, ], col = cl$cluster + 1, asp = 1, pch = 20)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
library(clustlearn)
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- dbscan(db5[1:20, ], .3, details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE)
as.character(-1:20)
as.character(-(1:20))
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
plot(cl)
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
plot(cl)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
warnings()
plot(cl)
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
warnings()
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:20, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:6, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[7:12, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[7:12, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:6, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:6, ], 'single', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:6, ], 'complete', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:6, ], 'av', details = TRUE, waiting = FALSE)
cl <- agglomerative_clustering(db5[1:6, ], 'av', details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:6, ], details = TRUE, waiting = FALSE)
devtools::load_all(".")
cl <- agglomerative_clustering(db5[1:6, ], details = TRUE)
install.packages(LearnClust)
install.packages('LearnClust')
library(LearnClust)
cl <- agglomerativeHC.details(db5[1:6, ], 'EUC', 'MIN')
cl <- agglomerative_clustering(db5[1:6, ], details = TRUE)
cutree(cl, 3)
cutree(cl, 2)
cutree(cl, 5)
library(clustlearn)
??clustlearn
?clustlearn
?kmeans
devtools::load_all(".")
library(LearnClust)
divisiveHC.details(db5[1:6, ], 'EUC', 'MIN')
?divisiveHC.details
devtools::load_all(".")
divisive_clustering(db5[1:6, ], details = TRUE)
devtools::load_all(".")
d <- dist(db5[1:15, ])
d <- as.matrix(d)
sapply(as.data.frame(d), sort)
d <- sapply(as.data.frame(d), sort)
plot(d[1, ])
lines(d[1, ])
lines(d[1, ])
plot(d[1, ])
plot(d[1, ]); lines(d[1, ])
plot(d[2, ]); lines(d[2, ])
d <- sapply(as.data.frame(t(d)), sort)
plot(d[2, ]); lines(d[2, ])
plot(d[3, ]); lines(d[3, ])
plot(d[4, ]); lines(d[4, ])
cl <- dbscan(db5[1:15, ], .3)
plot(db5[1:15, ], col = cl$cluster)
plot(db5[1:15, ], col = cl$cluster, asp = 1)
plot(db5[1:15, ], col = cl$cluster + 1, asp = 1)
cl <- dbscan(db5[1:15, ], .3, details = TRUE)
cl <- agglomerative_clustering(db5[1:15, ], 'single', details = TRUE)
cl <- agglomerative_clustering(db5[1:6, ], 'single', details = TRUE)
cl <- agglomerative_clustering(db5[1:6, ], 'single', details = TRUE, waiting = FALSE)
cl <- divisive_clustering(db5[1:6, ], details = TRUE, waiting = FALSE)
cl <- divisive_clustering(db5[1:6, ], details = TRUE)
exit
library(devtools)
use_release_issue()
?gh_token_help
create_github_token()
use_release_issue()
gitcreds::gitcreds_set()
use_release_issue()
library(devtools)
use_news_md()
db1
library(clustlearn)
db <- db1
class(db)
plot(db3)
use_news_md()
use_cran_comments()
use_cran_comments()
check(remote = TRUE, manual = TRUE)
?dbscan
?agglomerative_clustering
build_readme()
build_readme()
build_readme()
check(remote = TRUE, manual = TRUE)
install.package('v8')
install.packages('v8')
install.packages('V8')
check(remote = TRUE, manual = TRUE)
check(remote = TRUE, manual = TRUE)
check(remote = TRUE, manual = TRUE)
urlchecker::url_check()
check_win_devel()
check(remote = TRUE, manual = TRUE)
check_win_devel()
use_version('major')
use_version('major')
use_version('major')
