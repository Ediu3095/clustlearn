tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(paste(tmp$title, ' - ', round(t$toc - t$tic, 2), 's', sep = ''), line = .2)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
}
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(paste(tmp$title, ' - ', round(t$toc - t$tic, 2), 's', sep = ''), line = .2)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, outer = TRUE)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
}
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(paste(tmp$title, ' - ', round(t$toc - t$tic, 2), 's', sep = ''), line = .2)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
}
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
# tmp <- km_plots[[idx]]
# cl <- agglomerative_clustering(tmp$db, tmp$prox)
# plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
# title(paste(tmp$title, ' - ', cl$method, '-linkage - k = ', tmp$k, sep = ''), line = .2)
}
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- ahc_plots[[idx]]
tictoc::tic()
cl <- agglomerative_clustering(tmp$db, tmp$prox)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dhc_plots[[idx]]
tictoc::tic()
cl <- divisive_clustering(tmp$db)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
}
km_plots <- list(
list(db = db1, k = 2, title = 'K-Means - db1'),
list(db = db2, k = 2, title = 'K-Means - db2'),
list(db = db3, k = 3, title = 'K-Means - db3'),
list(db = db4, k = 3, title = 'K-Means - db4'),
list(db = db5, k = 3, title = 'K-Means - db5'),
list(db = db6, k = 3, title = 'K-Means - db6')
)
dbs_plots <- list(
list(db = db1, eps = 0.30, title = 'DBSCAN - db1'),
list(db = db2, eps = 0.30, title = 'DBSCAN - db2'),
list(db = db3, eps = 0.25, title = 'DBSCAN - db3'),
list(db = db4, eps = 0.20, title = 'DBSCAN - db4'),
list(db = db5, eps = 0.30, title = 'DBSCAN - db5'),
list(db = db6, eps = 0.30, title = 'DBSCAN - db6')
)
gmm_plots <- list(
list(db = db1, k = 2, title = 'GMM - db1'),
list(db = db2, k = 2, title = 'GMM - db2'),
list(db = db3, k = 3, title = 'GMM - db3'),
list(db = db4, k = 3, title = 'GMM - db4'),
list(db = db5, k = 3, title = 'GMM - db5'),
list(db = db6, k = 3, title = 'GMM - db6')
)
ahc_plots <- list(
list(db = db1, k = 2, prox = "single",    title = 'AHC - db1'),
list(db = db2, k = 2, prox = "single",    title = 'AHC - db2'),
list(db = db3, k = 4, prox = "average",   title = 'AHC - db3'),
list(db = db4, k = 6, prox = "single",    title = 'AHC - db4'),
list(db = db5, k = 3, prox = "complete",  title = 'AHC - db5'),
list(db = db6, k = 3, prox = "complete",  title = 'AHC - db6')
)
dhc_plots <- list(
list(db = db1, k = 2, title = 'DHC - db1'),
list(db = db2, k = 2, title = 'DHC - db2'),
list(db = db3, k = 3, title = 'DHC - db3'),
list(db = db4, k = 3, title = 'DHC - db4'),
list(db = db5, k = 3, title = 'DHC - db5'),
list(db = db6, k = 3, title = 'DHC - db6')
)
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db[cl$cluster != 0, ], col = cl$cluster[cl$cluster != 0], main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
points(tmp$db[cl$cluster == 0, ], col = max(cl$cluster) + 1, pch = 4, lwd = 2)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
x <- seq(min(db[, 1]), max(db[, 1]), length.out = 100)
y <- seq(min(db[, 2]), max(db[, 2]), length.out = 100)
for (i in seq_len(tmp$k)) {
m <- cl$mu[i, ]
s <- cl$sigma[i, , ]
l <- cl$lambda[i]
f <- function(x, y) {
l * clustlearn:::dmnorm(cbind(x, y), m, s)
}
z <- outer(x, y, f)
contour(x, y, z, col = i, nlevels = 1, add = TRUE)
}
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- ahc_plots[[idx]]
tictoc::tic()
cl <- agglomerative_clustering(tmp$db, tmp$prox)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dhc_plots[[idx]]
tictoc::tic()
cl <- divisive_clustering(tmp$db)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
}
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db[cl$cluster != 0, ], col = cl$cluster[cl$cluster != 0], main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
points(tmp$db[cl$cluster == 0, ], col = max(cl$cluster) + 1, pch = 4, lwd = 2)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
x <- seq(min(tmp$db[, 1]), max(tmp$db[, 1]), length.out = 100)
y <- seq(min(tmp$db[, 2]), max(tmp$db[, 2]), length.out = 100)
for (i in seq_len(tmp$k)) {
m <- cl$mu[i, ]
s <- cl$sigma[i, , ]
l <- cl$lambda[i]
f <- function(x, y) {
l * clustlearn:::dmnorm(cbind(x, y), m, s)
}
z <- outer(x, y, f)
contour(x, y, z, col = i, nlevels = 1, add = TRUE)
}
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- ahc_plots[[idx]]
tictoc::tic()
cl <- agglomerative_clustering(tmp$db, tmp$prox)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dhc_plots[[idx]]
tictoc::tic()
cl <- divisive_clustering(tmp$db)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
}
km_plots <- list(
list(db = db1, k = 2, title = 'K-Means - db1'),
list(db = db2, k = 2, title = 'K-Means - db2'),
list(db = db3, k = 3, title = 'K-Means - db3'),
list(db = db4, k = 3, title = 'K-Means - db4'),
list(db = db5, k = 3, title = 'K-Means - db5'),
list(db = db6, k = 3, title = 'K-Means - db6')
)
dbs_plots <- list(
list(db = db1, eps = 0.30, title = 'DBSCAN - db1'),
list(db = db2, eps = 0.30, title = 'DBSCAN - db2'),
list(db = db3, eps = 0.25, title = 'DBSCAN - db3'),
list(db = db4, eps = 0.20, title = 'DBSCAN - db4'),
list(db = db5, eps = 0.30, title = 'DBSCAN - db5'),
list(db = db6, eps = 0.30, title = 'DBSCAN - db6')
)
gmm_plots <- list(
list(db = db1, k = 2, title = 'GMM - db1'),
list(db = db2, k = 2, title = 'GMM - db2'),
list(db = db3, k = 3, title = 'GMM - db3'),
list(db = db4, k = 3, title = 'GMM - db4'),
list(db = db5, k = 3, title = 'GMM - db5'),
list(db = db6, k = 3, title = 'GMM - db6')
)
ahc_plots <- list(
list(db = db1, k = 2, prox = "single",    title = 'AHC - db1'),
list(db = db2, k = 2, prox = "single",    title = 'AHC - db2'),
list(db = db3, k = 4, prox = "average",   title = 'AHC - db3'),
list(db = db4, k = 6, prox = "single",    title = 'AHC - db4'),
list(db = db5, k = 3, prox = "complete",  title = 'AHC - db5'),
list(db = db6, k = 3, prox = "complete",  title = 'AHC - db6')
)
dhc_plots <- list(
list(db = db1, k = 2, title = 'DHC - db1'),
list(db = db2, k = 2, title = 'DHC - db2'),
list(db = db3, k = 3, title = 'DHC - db3'),
list(db = db4, k = 3, title = 'DHC - db4'),
list(db = db5, k = 3, title = 'DHC - db5'),
list(db = db6, k = 3, title = 'DHC - db6')
)
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db[cl$cluster != 0, ], col = cl$cluster[cl$cluster != 0], main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
points(tmp$db[cl$cluster == 0, ], col = max(cl$cluster) + 1, pch = 4, lwd = 2)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
x <- seq(min(tmp$db[, 1]), max(tmp$db[, 1]), length.out = 100)
y <- seq(min(tmp$db[, 2]), max(tmp$db[, 2]), length.out = 100)
for (i in seq_len(tmp$k)) {
m <- cl$mu[i, ]
s <- cl$sigma[i, , ]
l <- cl$lambda[i]
f <- function(x, y) {
l * clustlearn:::dmnorm(cbind(x, y), m, s)
}
z <- outer(x, y, f)
contour(x, y, z, col = i, nlevels = 1, add = TRUE)
}
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- ahc_plots[[idx]]
tictoc::tic()
cl <- agglomerative_clustering(tmp$db, tmp$prox)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dhc_plots[[idx]]
tictoc::tic()
cl <- divisive_clustering(tmp$db)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
}
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db[cl$cluster != 0, ], col = cl$cluster[cl$cluster != 0], main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
points(tmp$db[cl$cluster == 0, ], col = max(cl$cluster) + 1, pch = 4, lwd = 2)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
x <- seq(min(tmp$db[, 1]), max(tmp$db[, 1]), length.out = 100)
y <- seq(min(tmp$db[, 2]), max(tmp$db[, 2]), length.out = 100)
for (i in seq_len(tmp$k)) {
m <- cl$mu[i, ]
s <- cl$sigma[i, , ]
l <- cl$lambda[i]
f <- function(x, y) {
l * clustlearn:::dmnorm(cbind(x, y), m, s)
}
z <- outer(x, y, f)
contour(x, y, z, col = i, add = TRUE)
}
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- ahc_plots[[idx]]
tictoc::tic()
cl <- agglomerative_clustering(tmp$db, tmp$prox)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dhc_plots[[idx]]
tictoc::tic()
cl <- divisive_clustering(tmp$db)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k), main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
}
km_plots <- list(
list(db = db1, k = 2, title = 'K-Means - db1'),
list(db = db2, k = 2, title = 'K-Means - db2'),
list(db = db3, k = 3, title = 'K-Means - db3'),
list(db = db4, k = 3, title = 'K-Means - db4'),
list(db = db5, k = 3, title = 'K-Means - db5'),
list(db = db6, k = 3, title = 'K-Means - db6')
)
dbs_plots <- list(
list(db = db1, eps = 0.30, title = 'DBSCAN - db1'),
list(db = db2, eps = 0.30, title = 'DBSCAN - db2'),
list(db = db3, eps = 0.25, title = 'DBSCAN - db3'),
list(db = db4, eps = 0.20, title = 'DBSCAN - db4'),
list(db = db5, eps = 0.30, title = 'DBSCAN - db5'),
list(db = db6, eps = 0.30, title = 'DBSCAN - db6')
)
gmm_plots <- list(
list(db = db1, k = 2, title = 'GMM - db1'),
list(db = db2, k = 2, title = 'GMM - db2'),
list(db = db3, k = 3, title = 'GMM - db3'),
list(db = db4, k = 3, title = 'GMM - db4'),
list(db = db5, k = 3, title = 'GMM - db5'),
list(db = db6, k = 3, title = 'GMM - db6')
)
ahc_plots <- list(
list(db = db1, k = 2, prox = "single",    title = 'AHC - db1'),
list(db = db2, k = 2, prox = "single",    title = 'AHC - db2'),
list(db = db3, k = 4, prox = "average",   title = 'AHC - db3'),
list(db = db4, k = 6, prox = "single",    title = 'AHC - db4'),
list(db = db5, k = 3, prox = "complete",  title = 'AHC - db5'),
list(db = db6, k = 3, prox = "complete",  title = 'AHC - db6')
)
dhc_plots <- list(
list(db = db1, k = 2, title = 'DHC - db1'),
list(db = db2, k = 2, title = 'DHC - db2'),
list(db = db3, k = 3, title = 'DHC - db3'),
list(db = db4, k = 3, title = 'DHC - db4'),
list(db = db5, k = 3, title = 'DHC - db5'),
list(db = db6, k = 3, title = 'DHC - db6')
)
par(mfrow = c(6, 5), mar = c(.1, 1, 1.9, 1))
for (idx in 1:6) {
tmp <- km_plots[[idx]]
tictoc::tic()
cl <- kmeans(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster + 1, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dbs_plots[[idx]]
tictoc::tic()
cl <- dbscan(tmp$db, tmp$eps)
t <- tictoc::toc()
plot(tmp$db[cl$cluster != 0, ], col = cl$cluster[cl$cluster != 0] + 1, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
points(tmp$db[cl$cluster == 0, ], pch = 4, lwd = 2) # , col = 1
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- gmm_plots[[idx]]
tictoc::tic()
cl <- gaussian_mixture(tmp$db, tmp$k)
t <- tictoc::toc()
plot(tmp$db, col = cl$cluster + 1, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- ahc_plots[[idx]]
tictoc::tic()
cl <- agglomerative_clustering(tmp$db, tmp$prox)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k) + 1, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
tmp <- dhc_plots[[idx]]
tictoc::tic()
cl <- divisive_clustering(tmp$db)
t <- tictoc::toc()
plot(tmp$db, col = cutree(cl, tmp$k) + 1, main = '', sub = '', xlab = '', ylab = '', asp = 1, frame.plot = TRUE, axes = FALSE, pch = 20)
title(tmp$title, line = .2)
title(sub = paste(round(t$toc - t$tic, 2), 's', sep = ''), line = -1, adj = 1)
}
